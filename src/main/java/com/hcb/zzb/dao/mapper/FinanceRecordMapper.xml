<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcb.zzb.dao.interfaceClass.FinanceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hcb.zzb.dto.FinanceRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="delete_at" property="deleteAt" jdbcType="TIMESTAMP" />
    <result column="finance_record_uuid" property="financeRecordUuid" jdbcType="VARCHAR" />
    <result column="record_type" property="recordType" jdbcType="INTEGER" />
    <result column="order_record_type" property="orderRecordType" jdbcType="INTEGER" />
    <result column="order_uuid" property="orderUuid" jdbcType="VARCHAR" />
    <result column="recharge_record_uuid" property="rechargeRecordUuid" jdbcType="VARCHAR" />
    <result column="withdrawals_record_uuid" property="withdrawalsRecordUuid" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="REAL" />
    <result column="finance_type" property="financeType" jdbcType="INTEGER" />
    <result column="user_uuid" property="userUuid" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_way" property="payWay" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_at, update_at, delete_at, finance_record_uuid, record_type, order_record_type, 
    order_uuid, recharge_record_uuid, withdrawals_record_uuid, money, finance_type, user_uuid,
    pay_type,pay_way
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from finance_record
    where delete_at is null and id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByUserUuid" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select 
    <include refid="Base_Column_List" />
    from finance_record
    where delete_at is null and user_uuid=#{user_uuid,jdbcType=VARCHAR} 
    order by create_at desc
    limit #{pageIndex},#{pageSize}
  </select>
  <select id="selectCountByUserUuid" resultType="int" parameterType="java.lang.String">
  	select count(1)
  	from finance_record
  	where delete_at is null and user_uuid=#{user_uuid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectIncomeAndExpenditureByToday" resultMap="BaseResultMap" parameterType="java.util.HashMap">
  	select 
    <include refid="Base_Column_List" />
    from finance_record
    where delete_at is null 
    and to_days(create_at) = to_days(now()) 
    and finance_type=#{financeType,jdbcType=INTEGER} 
    
    <if test="user_uuid !='' and user_uuid != null">
    	and user_uuid=#{user_uuid,jdbcType=VARCHAR}
    </if>
    <if test="recordType !='' and recordType != null">
    	and record_type=#{recordType,jdbcType=VARCHAR}
    </if>
  </select>
  
  <select id="selectByUuid" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
    <include refid="Base_Column_List" />
    from finance_record
    where delete_at is null
    and finance_record_uuid=#{financeRecordUuid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByMapLimit" resultType="java.util.Map" parameterType="java.util.HashMap">
  	select 
    fin.id AS id, 
    fin.create_at AS createAt, 
    fin.update_at AS updateAt, 
    fin.delete_at AS deleteAt, 
    fin.finance_record_uuid AS financeRecordUuid, 
    fin.record_type AS recordType, 
    fin.order_record_type AS orderRecordType, 
    fin.order_uuid AS orderUuid, 
    fin.recharge_record_uuid AS rechargeRecordUuid, 
    fin.withdrawals_record_uuid AS withdrawalsRecordUuid, 
    fin.money AS money, 
    fin.finance_type AS financeType, 
    fin.user_uuid AS userUuid,
    fin.pay_type AS payType,
    fin.pay_way AS payWay,
    u.user_name AS userName
    from finance_record fin
    left join users u
    on fin.user_uuid=u.user_uuid
    where fin.delete_at is null and u.delete_at is null
    <if test="userName !='' and userName != null">
		and  u.user_name like CONCAT('%', #{userName,jdbcType=VARCHAR}, '%')
	</if>
	<if test="userUuid !='' and userUuid != null">
		and  u.user_uuid=#{userUuid,jdbcType=VARCHAR}
	</if>
    <if test="orderBy != null and orderBy !=''">
  		<if test="orderBy==1">
  			order by fin.create_at asc
  		</if>
  		<if test="orderBy==2">
  			order by fin.create_at desc
  		</if>
  	</if>
    limit #{start},#{end}
  </select>
  
  <select id="countSelectByMapLimit" resultType="java.lang.Integer" parameterType="java.util.HashMap">
  	select count(1)
    from finance_record fin 
    left join users u
    on fin.user_uuid=u.user_uuid
    where fin.delete_at is null and u.delete_at is null
     <if test="userName !='' and userName != null">
		and  u.user_name like CONCAT('%', #{userName,jdbcType=VARCHAR}, '%')
	</if>
	<if test="userUuid !='' and userUuid != null">
		and  u.user_uuid=#{userUuid,jdbcType=VARCHAR}
	</if>
  </select>
  
  <select id="selectByRecordType" resultMap="BaseResultMap" parameterType="java.util.HashMap">
  	select 
    <include refid="Base_Column_List" />
    from finance_record
    where delete_at is null
    and record_type=#{recordType,jdbcType=INTEGER}
    <if test="orderBy != null and orderBy !=''">
  		<if test="orderBy==1">
  			order by create_at asc
  		</if>
  		<if test="orderBy==2">
  			order by create_at desc
  		</if>
  	</if>
    limit #{start},#{end}
  </select>
  
  <select id="countSelectByRecordType" resultType="java.lang.Integer" parameterType="java.util.HashMap">
  	select count(1)
    from finance_record
    where delete_at is null
    and record_type=#{recordType,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from finance_record
    where delete_at is null and id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hcb.zzb.dto.FinanceRecord" >
    insert into finance_record (id, create_at, update_at, 
      delete_at, finance_record_uuid, record_type, 
      order_record_type, order_uuid, recharge_record_uuid, 
      withdrawals_record_uuid, money, finance_type, 
      user_uuid,pay_type,pay_way)
    values (#{id,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{deleteAt,jdbcType=TIMESTAMP}, #{financeRecordUuid,jdbcType=VARCHAR}, #{recordType,jdbcType=INTEGER}, 
      #{orderRecordType,jdbcType=INTEGER}, #{orderUuid,jdbcType=VARCHAR}, #{rechargeRecordUuid,jdbcType=VARCHAR}, 
      #{withdrawalsRecordUuid,jdbcType=VARCHAR}, #{money,jdbcType=REAL}, #{financeType,jdbcType=INTEGER}, 
      #{userUuid,jdbcType=VARCHAR},#{payType,jdbcType=INTEGER},#{payWay,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hcb.zzb.dto.FinanceRecord" >
    insert into finance_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="deleteAt != null" >
        delete_at,
      </if>
      <if test="financeRecordUuid != null" >
        finance_record_uuid,
      </if>
      <if test="recordType != null" >
        record_type,
      </if>
      <if test="orderRecordType != null" >
        order_record_type,
      </if>
      <if test="orderUuid != null" >
        order_uuid,
      </if>
      <if test="rechargeRecordUuid != null" >
        recharge_record_uuid,
      </if>
      <if test="withdrawalsRecordUuid != null" >
        withdrawals_record_uuid,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="financeType != null" >
        finance_type,
      </if>
      <if test="userUuid != null" >
        user_uuid,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="financeRecordUuid != null" >
        #{financeRecordUuid,jdbcType=VARCHAR},
      </if>
      <if test="recordType != null" >
        #{recordType,jdbcType=INTEGER},
      </if>
      <if test="orderRecordType != null" >
        #{orderRecordType,jdbcType=INTEGER},
      </if>
      <if test="orderUuid != null" >
        #{orderUuid,jdbcType=VARCHAR},
      </if>
      <if test="rechargeRecordUuid != null" >
        #{rechargeRecordUuid,jdbcType=VARCHAR},
      </if>
      <if test="withdrawalsRecordUuid != null" >
        #{withdrawalsRecordUuid,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=REAL},
      </if>
      <if test="financeType != null" >
        #{financeType,jdbcType=INTEGER},
      </if>
      <if test="userUuid != null" >
        #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
       <if test="payWay != null" >
        #{payWay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcb.zzb.dto.FinanceRecord" >
    update finance_record
    <set >
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="financeRecordUuid != null" >
        finance_record_uuid = #{financeRecordUuid,jdbcType=VARCHAR},
      </if>
      <if test="recordType != null" >
        record_type = #{recordType,jdbcType=INTEGER},
      </if>
      <if test="orderRecordType != null" >
        order_record_type = #{orderRecordType,jdbcType=INTEGER},
      </if>
      <if test="orderUuid != null" >
        order_uuid = #{orderUuid,jdbcType=VARCHAR},
      </if>
      <if test="rechargeRecordUuid != null" >
        recharge_record_uuid = #{rechargeRecordUuid,jdbcType=VARCHAR},
      </if>
      <if test="withdrawalsRecordUuid != null" >
        withdrawals_record_uuid = #{withdrawalsRecordUuid,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=REAL},
      </if>
      <if test="financeType != null" >
        finance_type = #{financeType,jdbcType=INTEGER},
      </if>
      <if test="userUuid != null" >
        user_uuid = #{userUuid,jdbcType=VARCHAR},
      </if>
       <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcb.zzb.dto.FinanceRecord" >
    update finance_record
    set create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      finance_record_uuid = #{financeRecordUuid,jdbcType=VARCHAR},
      record_type = #{recordType,jdbcType=INTEGER},
      order_record_type = #{orderRecordType,jdbcType=INTEGER},
      order_uuid = #{orderUuid,jdbcType=VARCHAR},
      recharge_record_uuid = #{rechargeRecordUuid,jdbcType=VARCHAR},
      withdrawals_record_uuid = #{withdrawalsRecordUuid,jdbcType=VARCHAR},
      money = #{money,jdbcType=REAL},
      finance_type = #{financeType,jdbcType=INTEGER},
      user_uuid = #{userUuid,jdbcType=VARCHAR},
      pay_type =#{payType,jdbcType=INTEGER},
      pay_way =#{payWay,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>