<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcb.zzb.dao.interfaceClass.ManagerMapper" >
  <resultMap id="BaseResultMap" type="com.hcb.zzb.dto.Manager" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="delete_at" property="deleteAt" jdbcType="TIMESTAMP" />
    <result column="manager_uuid" property="managerUuid" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="contacts_phone" property="contactsPhone" jdbcType="VARCHAR" />
    <result column="manager_status" property="managerStatus" jdbcType="INTEGER" />
    <result column="manager_type" property="managerType" jdbcType="INTEGER" />
    <result column="manager_power" property="managerPower" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_at, update_at, delete_at, manager_uuid, account, password, contacts, contacts_phone, 
    manager_status, manager_type, manager_power, creater
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from manager
    where id = #{id,jdbcType=INTEGER} and delete_at is null
  </select>
  
  <select id="selectByAccountUuid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from manager
    where manager_uuid = #{uuid,jdbcType=VARCHAR} and delete_at is null
  </select>
  
  <select id="selectByAccount" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from manager
    where account = #{account,jdbcType=VARCHAR} and delete_at is null
  </select>
  
  <select id="searchByMap" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    from manager
    where delete_at is null
    <if test="contacts !='' and contacts != null">
		contacts like CONCAT(CONCAT('%', #{contacts,jdbcType=VARCHAR}), '%')
	</if>
	<if test="account !='' and account != null">
		account like CONCAT(CONCAT('%', #{account,jdbcType=VARCHAR}), '%')
	</if>
	order by create_at desc LIMIT #{start},#{end}
  </select>
  
  <select id="countByMap" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
   select count(1) from manager
    where delete_at is null
    <if test="contacts !='' and contacts != null">
		contacts like CONCAT(CONCAT('%', #{contacts,jdbcType=VARCHAR}), '%')
	</if>
	<if test="account !='' and account != null">
		account like CONCAT(CONCAT('%', #{account,jdbcType=VARCHAR}), '%')
	</if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from manager
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hcb.zzb.dto.Manager" >
    insert into manager (id, create_at, update_at, 
      delete_at, manager_uuid, account, 
      password, contacts, contacts_phone, 
      manager_status, manager_type, manager_power, 
      creater)
    values (#{id,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{deleteAt,jdbcType=TIMESTAMP}, #{managerUuid,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, #{contactsPhone,jdbcType=VARCHAR}, 
      #{managerStatus,jdbcType=INTEGER}, #{managerType,jdbcType=INTEGER}, #{managerPower,jdbcType=VARCHAR}, 
      #{creater,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hcb.zzb.dto.Manager" >
    insert into manager
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="deleteAt != null" >
        delete_at,
      </if>
      <if test="managerUuid != null" >
        manager_uuid,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="contactsPhone != null" >
        contacts_phone,
      </if>
      <if test="managerStatus != null" >
        manager_status,
      </if>
      <if test="managerType != null" >
        manager_type,
      </if>
      <if test="managerPower != null" >
        manager_power,
      </if>
      <if test="creater != null" >
        creater,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="managerUuid != null" >
        #{managerUuid,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null" >
        #{contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="managerStatus != null" >
        #{managerStatus,jdbcType=INTEGER},
      </if>
      <if test="managerType != null" >
        #{managerType,jdbcType=INTEGER},
      </if>
      <if test="managerPower != null" >
        #{managerPower,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcb.zzb.dto.Manager" >
    update manager
    <set >
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="managerUuid != null" >
        manager_uuid = #{managerUuid,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null" >
        contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="managerStatus != null" >
        manager_status = #{managerStatus,jdbcType=INTEGER},
      </if>
      <if test="managerType != null" >
        manager_type = #{managerType,jdbcType=INTEGER},
      </if>
      <if test="managerPower != null" >
        manager_power = #{managerPower,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcb.zzb.dto.Manager" >
    update manager
    set create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      manager_uuid = #{managerUuid,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
      manager_status = #{managerStatus,jdbcType=INTEGER},
      manager_type = #{managerType,jdbcType=INTEGER},
      manager_power = #{managerPower,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>