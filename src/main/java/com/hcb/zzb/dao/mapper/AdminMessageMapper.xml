<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcb.zzb.dao.interfaceClass.AdminMessageMapper" >
  <resultMap id="BaseResultMap" type="com.hcb.zzb.dto.AdminMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="delete_at" property="deleteAt" jdbcType="TIMESTAMP" />
    <result column="message_type" property="messageType" jdbcType="INTEGER" />
    <result column="message_content" property="messageContent" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
    <result column="type_uuid" property="typeUuid" jdbcType="VARCHAR" />
    <result column="user_uuid" property="userUuid" jdbcType="VARCHAR" />
    <result column="reader_uuid" property="readerUuid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_at, update_at, delete_at, message_type, message_content, is_read, type_uuid, 
    user_uuid, reader_uuid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from admin_message
    where id = #{id,jdbcType=INTEGER} and delete_at is null
  </select>
  
  <select id="searchByMap" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    from admin_message
    where delete_at is null
    <if test="messageContent !='' and messageContent != null">
		and  message_content like CONCAT('%', #{messageContent,jdbcType=VARCHAR}, '%')
	</if>
	order by create_at desc LIMIT #{start},#{end}
  </select>
  
  <select id="countByMap" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
   select count(1) from admin_message
    where delete_at is null
    <if test="messageContent !='' and messageContent != null">
		and message_content like CONCAT('%', #{messageContent,jdbcType=VARCHAR}, '%')
	</if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hcb.zzb.dto.AdminMessage" >
    insert into admin_message (id, create_at, update_at, 
      delete_at, message_type, message_content, 
      is_read, type_uuid, user_uuid, 
      reader_uuid)
    values (#{id,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{deleteAt,jdbcType=TIMESTAMP}, #{messageType,jdbcType=INTEGER}, #{messageContent,jdbcType=VARCHAR}, 
      #{isRead,jdbcType=INTEGER}, #{typeUuid,jdbcType=VARCHAR}, #{userUuid,jdbcType=VARCHAR}, 
      #{readerUuid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hcb.zzb.dto.AdminMessage" >
    insert into admin_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="deleteAt != null" >
        delete_at,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="messageContent != null" >
        message_content,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="typeUuid != null" >
        type_uuid,
      </if>
      <if test="userUuid != null" >
        user_uuid,
      </if>
      <if test="readerUuid != null" >
        reader_uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="messageContent != null" >
        #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="typeUuid != null" >
        #{typeUuid,jdbcType=VARCHAR},
      </if>
      <if test="userUuid != null" >
        #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="readerUuid != null" >
        #{readerUuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcb.zzb.dto.AdminMessage" >
    update admin_message
    <set >
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="messageContent != null" >
        message_content = #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="typeUuid != null" >
        type_uuid = #{typeUuid,jdbcType=VARCHAR},
      </if>
      <if test="userUuid != null" >
        user_uuid = #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="readerUuid != null" >
        reader_uuid = #{readerUuid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcb.zzb.dto.AdminMessage" >
    update admin_message
    set create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      message_type = #{messageType,jdbcType=INTEGER},
      message_content = #{messageContent,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=INTEGER},
      type_uuid = #{typeUuid,jdbcType=VARCHAR},
      user_uuid = #{userUuid,jdbcType=VARCHAR},
      reader_uuid = #{readerUuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>