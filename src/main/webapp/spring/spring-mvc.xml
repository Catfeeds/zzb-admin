<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
		default-lazy-init="false">

	<!-- 使用CoC,惯例优先原则(convention over configuration)的方式来配置SpringMVC可以帮我们声明Controller的时候省下很多功夫。
		只要我们的Controller是以XXXController的方式命名的话就可以使用到CoC带来的好处。
		例如，对于普通的Controller（非MultiActionController），CoC帮我们做以下的映射：
		HomeController映射到/home*请求URL
	 -->
  	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>
	  <!-- 使用annocation创建Controller的bean -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>     
	<context:component-scan base-package="com.hcb.apparel">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<mvc:annotation-driven />
	<mvc:default-servlet-handler/>
	<!-- 定义spring过滤器 -->
	<!-- <mvc:interceptors>  
    		<bean class="com.hcb.apparel.intercepter.UserOperationInterceptor"></bean>
	</mvc:interceptors> -->
	
	<!-- 定义首页 -->
	<mvc:view-controller path="/" view-name="redirect:/"/>

	<!-- 定义JSP --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- end -->
	
</beans>
